{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setvalue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlfor","PictureOutlined","type","multiple","id","style","display","onchange","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMesssage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessagekey","width","lastMessage","renderMessages","height","LoginForm","setusername","password","setpassword","error","seterror","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.556db2c8.chunk.js","sourcesContent":["import React,{useState} from \"react\"\r\nimport {SendOutlined, PictureOutlined} from '@ant-design/icons'\r\nimport {sendMessage, isTyping} from \"react-chat-engine\"\r\nimport ChatFeed from \"./ChatFeed\"\r\n\r\nconst MessageForm = (props)=> {\r\n    const [value, setvalue] = useState('')\r\n    const {chatId,creds}=props\r\n\r\n\r\n    const handleSubmit=(event)=>{\r\n        event.preventDefault()\r\n        const text =value.trim()\r\n        if (text.length > 0){\r\n            sendMessage(creds,chatId,{text })\r\n        }\r\n        setvalue('')\r\n\r\n    }\r\n    const handleChange=(event)=>{\r\n        setvalue(event.target.value)\r\n\r\n        isTyping(props, chatId)\r\n        \r\n    }\r\n    const handleUpload =(event)=>{\r\n        sendMessage(creds,chatId,{files: event.target.files, text:''})\r\n\r\n    }\r\n    return(\r\n        <form className=\"message-form\" onSubmit= {handleSubmit}>\r\n            <input\r\n            className='message-input'\r\n            placeholder='send a message..'\r\n            value={value}\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            />\r\n            <label htmlfor='upload-button'>\r\n                <span className='image-button'>\r\n                     <PictureOutlined className='picture-icon'/>\r\n                 </span>\r\n\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id='upload-button'\r\n                style={{display: 'none'}}\r\n                onchange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"sendt-button\">\r\n                <SendOutlined className='send-icon'/>\r\n            </button>\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default MessageForm\r\n","import React from \"react\"\r\n\r\nconst MyMessage = ({message})=> {\r\n    if(message?.attachments?.length>0){\r\n        return (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attacment\"\r\n                className='message-image'\r\n                style={{float:'right'}}\r\n             />\r\n        )\r\n    }\r\n    return(\r\n        <div className='message' style={{float:'right', marginRight:'18px', color:'white', backgroundColor:'#3B2A50' }} >\r\n            {message.text}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyMessage","import React from \"react\"\r\n\r\nconst TheirMessage= ({lastMesssage, message})=> {\r\n    const isFirstMessageByUser=!lastMesssage|| lastMesssage.sender.username !== message.sender.username\r\n    return(\r\n        <div className='message-row'>\r\n             {isFirstMessageByUser && (\r\n                 <div\r\n                 className=\"message-avatar\"\r\n                 style={{backgroundImage:`url(${message?.sender?.avatar})`}}\r\n                 />\r\n             )}\r\n             {\r\n                    message?.attachments?.length>0\r\n                        ? (\r\n                            <img\r\n                                src={message.attachments[0].file}\r\n                                alt=\"message-attacment\"\r\n                                className='message-image'\r\n                                style={{marginLeft: isFirstMessageByUser ? '4px': '48px'}}\r\n                             />\r\n                        ) :(\r\n                            <div className='message' style={{float:'left', marginRight:'18px', color:'white', backgroundColor:'#CABCDC',marginLeft: isFirstMessageByUser ? '4px': '48px' }} >\r\n                                 {message.text}\r\n                            </div>\r\n                        )\r\n                    \r\n                 \r\n             }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TheirMessage","import React from \"react\"\r\nimport MessageForm from \"./MessageForm\"\r\nimport MyMessage from \"./MyMessage\"\r\nimport TheirMessage from \"./TheirMessage\"\r\nconst ChatFeed = (props) => {\r\n    const {chats,activeChat, userName,messages}=props\r\n\r\n    const chat =chats && chats [activeChat]\r\n    const renderReadReceipts =(message,isMyMessage)=>{\r\n       return chat.people.map((person,index)=>person.last_read === message.id &&(\r\n            <div\r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                     float:isMyMessage ?'right':'left',\r\n                     backgroundImage:`url(${person?.person?.avatar})` \r\n                    }}\r\n            />\r\n        ))\r\n\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys =Object.keys(messages)\r\n\r\n        return keys.map ( (key,index) => {\r\n            const message= messages [key]\r\n            const lastMessagekey = index===0 ? null : keys[index-1]\r\n            const isMyMessage = userName === message.sender.username\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={ { width:'100%' }} >\r\n                    <div className='message-block'>\r\n                        {\r\n                            isMyMessage\r\n                            ?<MyMessage message={message}/>\r\n                            :<TheirMessage message= {message} lastMessage={messages[lastMessagekey]}/>\r\n                        }\r\n\r\n                    </div>\r\n                    <div className= 'read-receipts' style={{marginRight:isMyMessage ?'18px':'0px', marginLeft:isMyMessage? ' 0px' :'68px' }} >\r\n                         {renderReadReceipts(message,  isMyMessage)}  \r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n\r\n        })\r\n    }\r\n    \r\n    if (!chat) return 'Loading...'\r\n    return(\r\n        <div className='chat-feed'>\r\n            <div className='chat-title-container'>\r\n                <div className='chat-title '>{chat.title}</div>\r\n                <div className='chat-subtitle'>\r\n                    {chat.people.map((person)=>`${person.person.username}`)}\r\n                </div>\r\n                {renderMessages()}\r\n                <div style={{height:\"100px\"}} />\r\n                <div className=\"message-form-container  \">\r\n                    <MessageForm{...props} chatId={activeChat} /> \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\nexport default ChatFeed","import {useState} from \"react\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst LoginForm =()=>{\r\n    const [username, setusername] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const [error, seterror] = useState(\"\")\r\n\r\n    const handleSubmit =async (e) =>{\r\n        e.preventDefault()\r\n        const authObject = { 'Project-ID' :\"a84ba77f-6344-4054-80c7-a2bc1c95a67d\" , 'User-Name':username, \"User-Secret\":password }\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats' ,{ headers: authObject })\r\n            localStorage.setItem('username',username)\r\n            localStorage.setItem('password',password)\r\n\r\n            window.location.reload()\r\n\r\n        } catch (error) {\r\n            seterror ('ooops incorrect username or password')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\"> Chat Application </h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type='text' value={username} onChange={(e) =>setusername (e.target.value) } className='input' placeholder='userName' required />\r\n                    <input type='password' value={password} onChange={(e) =>setpassword (e.target.value) } className='input' placeholder='password' required />\r\n                    <div align='center'>\r\n                        <button type='submit' className='button' >\r\n                            <span>start chatting</span>\r\n                        </button>\r\n\r\n                    </div>\r\n                    <h2 className=\"error\"> {error} </h2>\r\n\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default LoginForm","import {ChatEngine} from \"react-chat-engine\"\r\nimport './App.css'\r\nimport ChatFeed from \"./components/ChatFeed\"\r\nimport LoginForm from \"./components/LoginForm\"\r\n\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm/>\r\n\r\n    return (\r\n        <ChatEngine\r\n          height=\"100vh\"\r\n          projectID=\"a84ba77f-6344-4054-80c7-a2bc1c95a67d\"\r\n          userName={localStorage.getItem('username')}\r\n          userSecret={localStorage.getItem('password')}\r\n          renderChatFeed={(chatAppProps)=><ChatFeed {... chatAppProps} />}  \r\n        />\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from './App'\r\n ReactDom.render (<App/>, document.getElementById ('root') )"],"sourceRoot":""}